{"version":3,"sources":["./src/$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/auth/auth.guard.ts","./src/app/auth/auth.service.ts","./src/app/auth/login/login.component.html","./src/app/auth/login/login.component.ts","./src/app/auth/logout/logout.component.ts","./src/app/auth/signup/signup.component.html","./src/app/auth/signup/signup.component.ts","./src/app/client/client-create/client-create.component.html","./src/app/client/client-create/client-create.component.ts","./src/app/client/client-list/client-list.component.html","./src/app/client/client-list/client-list.component.ts","./src/app/client/client-list/myPaginatorEs.ts","./src/app/client/client-show/client-show.component.html","./src/app/client/client-show/client-show.component.ts","./src/app/client/client.service.ts","./src/app/header/header.component.html","./src/app/header/header.component.ts","./src/app/print/print-layout/print-layout.component.html","./src/app/print/print-layout/print-layout.component.ts","./src/app/print/print.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;ACXA,4GAAuD;AACvD,6JAAiF;AACjF,uKAAuF;AACvF,2HAA8D;AAC9D,gIAAiE;AACjE,gIAAiE;AACjE,gGAA8C;AAC9C,gKAAmF;AACnF,6JAAgF;AAEhF,IAAM,MAAM,GAAW;IACrB,+CAA+C;IAC/C,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,2CAAmB,EAAE,WAAW,EAAE,CAAC,sBAAS,CAAC,EAAE;IACtE,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,+CAAqB,EAAE,WAAW,EAAE,CAAC,sBAAS,CAAC,EAAE;IAC9E,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,+CAAqB,EAAE,WAAW,EAAE,CAAC,sBAAS,CAAC,EAAE;IACtF,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,gCAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,kCAAe,EAAE;IAC9C,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,kCAAe,EAAE;IAC9C,sDAAsD;IACtD,gEAAgE;IAChE,qDAAqD;IACrD,2CAA2C;IAC3C,oJAAoJ;IACpJ,2CAA2C;IAC3C,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,SAAS,EAAE,6CAAoB,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,2CAAmB,EAAE,CAAC,EAAC;CAC/I,CAAC;AAEF;IAAA;IAI+B,CAAC;IAAD,uBAAC;AAAD,CAAC;AAAnB,4CAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uDChC3B,yNAAmC,IACnC,6EAAM,KACJ,wQAAe,IACf,iGAAkD,KAChD,oSAAgC,yBAJxB,0BAAsB,EAAlC,YAAmC,EAAvB,SAAsB,GAEhC,YAAe,GAEb,YAAgC,mDAD7B,mBAA4C,0BAAjD,YAAkD,EAA7C,SAA4C;;;;;;;;;;;;;;;;;;;;ACFrD,2GAAoD;AAEpD;IAQE,sBAAmB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;QAF7C,UAAK,GAAG,kBAAkB,CAAC;QAGzB,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;IAC9B,CAAC;IAEH,mBAAC;AAAD,CAAC;AAPY,oCAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACsBzB;IAAA;IAgCyB,CAAC;IAAD,gBAAC;AAAD,CAAC;AAAb,8BAAS;;;;;;;;;;;;;;;AC3DtB,iGAA6C;;;AAE7C;IAEE,mBAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAChD,+BAAW,GAAX,UACE,IAA4B,EAC5B,KAA0B;QACxB,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;IACzC,CAAC;;oBAZH;CAaC;AAPY,8BAAS;;;;;;;;;;;;;;;ACLtB,6GAAkD;AAElD,4GAAyC;;;;AAEzC;IAIE,qBAAoB,IAAgB,EAAU,MAAc;QAAxC,SAAI,GAAJ,IAAI,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QAFpD,QAAG,GAAG,iCAAiC,CAAC;IAEe,CAAC;IAEzD,gCAAU,GAAjB,UAAkB,KAAa,EAAE,QAAgB;QAAjD,iBAQC;QAPC,IAAM,QAAQ,GAAa,EAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAC,CAAC;QAC9D,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,QAAQ,EAAE,QAAQ,CAAC;aAC5C,SAAS,CAAC,kBAAQ;YACjB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,YAAY,CAAC,OAAO,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC;YACrD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,2BAAK,GAAZ,UAAa,KAAa,EAAE,QAAgB;QAA5C,iBAQC;QAPC,IAAM,QAAQ,GAAa,EAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAC,CAAC;QAC9D,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,OAAO,EAAE,QAAQ,CAAC;aAC3C,SAAS,CAAC,kBAAQ;YACjB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,YAAY,CAAC,OAAO,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC;YACrD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,gCAAU,GAAjB;QACE,OAAO,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,IAAI,CAAC;IACvD,CAAC;IAEM,4BAAM,GAAb;QACE,YAAY,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QACxC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC9B,CAAC;;sBAtCH;CAuCC;AAjCY,kCAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yDCLtB,wrBAA+B;yDAI3B,mMAAsC,mEAAkC,iCAAxE,0DAAsC;yDAItC,oMAAyC,6EAAuC,iCAAhF,0DAAyC;yDAP7C;;;;;wBAA2E;MAArE;;wBAA6B;MAAnC,8VAA2E,IACzE,65CAAgB,MACd;;;;;;;;;;;;;;;;;;;;;mvCAAwH,KACxH,4KAAsC,IAExC,o6CAAgB,MACd;;;;;;;;;;;;;;;;;;;;;ooCAAmH,KACnH,4KAAyC,IAE3C,wYAAuD,iDAAc,2BAPsC,mBAAQ,EAAjH,aAAwH,EAAf,UAAQ,GAAC,mBAAK,EAAvH,aAAwH,EAAN,UAAK,GAAlF,wBAAY,EAApB,mBAAO,EAApC,aAAwH,EAAnF,UAAY,EAApB,UAAO,GAAc,qCAAgC,EAAuB,mBAAQ,EAAjG,wBAAY,EAA5B,aAAwH,EAAtE,UAAgC,EAAuB,UAAQ,EAAjG,UAAY,GACjB,+BAA0B,WAArC,aAAsC,EAA3B,UAA0B,GAGqE,mBAAQ,EAAlH,aAAmH,EAAT,UAAQ,GAA1E,2BAAe,EAAvB,mBAAO,EAAvC,aAAmH,EAA3E,UAAe,EAAvB,UAAO,GAAiB,kCAAwB,EAA0B,mBAAQ,EAAlG,2BAAe,EAA/B,aAAmH,EAA3D,UAAwB,EAA0B,UAAQ,EAAlG,UAAe,GACpB,+BAA6B,WAAxC,aAAyC,EAA9B,UAA6B,GAEhB,0BAAc,EAAxC,aAAuD,EAA7B,WAAc,2BAT1C,iaAA2E,GACzE,o5CAAgB,IACd,ygCAAwH,IAG1H,g7CAAgB,IACd,ygCAAmH,IAGrH,kKAAuD;yDAX3D,gMAAU,IACR,2KAA+B,IAC/B,2KAA2E,iDAD9D,mBAAiB,YAA9B,YAA+B,EAAlB,SAAiB,GAC0B,oBAAkB,YAA1E,YAA2E,EAAnB,SAAkB;;;;;;;;;;;;;;;;;;;;ACA5E,kGAA8C;AAE9C;IASE,wBAAmB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAF3C,cAAS,GAAG,KAAK,CAAC;IAE4B,CAAC;IAE/C,gCAAO,GAAP,UAAQ,IAAY;QAClB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,OAAO;SACR;QACD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAChE,CAAC;IACH,qBAAC;AAAD,CAAC;AAZY,wCAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACV3B,oGAAkD;AAElD,kGAA8C;AAE9C;IAOE,yBAAmB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAF3C,cAAS,GAAG,KAAK,CAAC;IAE4B,CAAC;IAE/C,kCAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAC/B,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IAC5B,CAAC;IACH,sBAAC;AAAD,CAAC;AATY,0CAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0DCP1B,wrBAA+B;0DAI3B,mMAAsC,mEAAkC,iCAAxE,0DAAsC;0DAItC,oMAAyC,6EAAuC,iCAAhF,0DAAyC;0DAP7C;;;;;wBAA8E;MAAxE;;wBAA+B;MAArC,+VAA8E,IAC5E,65CAAgB,MACd;;;;;;;;;;;;;;;;;;;;;mvCAAwH,KACxH,6KAAsC,IAExC,o6CAAgB,MACd;;;;;;;;;;;;;;;;;;;;;ooCAAmH,KACnH,6KAAyC,IAE3C,wYAAuD,uCAAS,2BAP2C,mBAAQ,EAAjH,aAAwH,EAAf,UAAQ,GAAC,mBAAK,EAAvH,aAAwH,EAAN,UAAK,GAAlF,wBAAY,EAApB,mBAAO,EAApC,aAAwH,EAAnF,UAAY,EAApB,UAAO,GAAc,qCAAgC,EAAuB,mBAAQ,EAAjG,wBAAY,EAA5B,aAAwH,EAAtE,UAAgC,EAAuB,UAAQ,EAAjG,UAAY,GACjB,+BAA0B,WAArC,aAAsC,EAA3B,UAA0B,GAGqE,mBAAQ,EAAlH,aAAmH,EAAT,UAAQ,GAA1E,2BAAe,EAAvB,mBAAO,EAAvC,aAAmH,EAA3E,UAAe,EAAvB,UAAO,GAAiB,kCAAwB,EAA0B,mBAAQ,EAAlG,2BAAe,EAA/B,aAAmH,EAA3D,UAAwB,EAA0B,UAAQ,EAAlG,UAAe,GACpB,+BAA6B,WAAxC,aAAyC,EAA9B,UAA6B,GAEhB,0BAAc,EAAxC,aAAuD,EAA7B,WAAc,2BAT1C,iaAA8E,GAC5E,o5CAAgB,IACd,ygCAAwH,IAG1H,g7CAAgB,IACd,ygCAAmH,IAGrH,kKAAuD;0DAX3D,gMAAU,IACR,4KAA+B,IAC/B,4KAA8E,iDADjE,mBAAiB,YAA9B,YAA+B,EAAlB,SAAiB,GAC6B,oBAAkB,YAA7E,YAA8E,EAAnB,SAAkB;;;;;;;;;;;;;;;;;;;;ACA/E,kGAA8C;AAE9C;IASE,yBAAmB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAF3C,cAAS,GAAG,KAAK,CAAC;IAE4B,CAAC;IAE/C,kCAAQ,GAAR,UAAS,IAAY;QACnB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,OAAO;SACR;QACD,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IACrE,CAAC;IACH,sBAAC;AAAD,CAAC;AAZY,0CAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gECT1B,wrBAA+B;gEAK3B,mMAA8C,wEAAuC,iCAArF,0DAA8C;gEAM9C,oMAA+C,yEAAwC,iCAAvF,0DAA+C;gEAM/C,oMAA+C,2EAA0C,iCAAzF,0DAA+C;gEAQ/C,oMAA6C,mEAAkC,iCAA/E,0DAA6C;gEAU7C,ykBAAgH,IAC9G,yhBAA+D,YAAjD;;wBAA0B;MAAxC,usBAA+D,kCAA6B,2BADxE,wBAAsB,EAA5C,YAAgH,EAA1F,SAAsB,GACD,mBAAqB,gBAA9D,YAA+D,EAAtB,UAAqB,mDADhE,iaAAgH,GAC9G,8xBAA+D,4FAA6B;gEAE9F,+LAA6D,oEAAmC,iCAAhG,0DAA6D;gEAK/D,2PAAqG,YAAvB;;wBAAsB;MAApG,uNAAqG,sCAAQ,2BAAnF,wBAAc,EAAxC,YAAqG,EAA3E,SAAc,2BAAxC,2JAAqG;gEA1CvG;;;;;wBAAsE;MAA7C;;wBAAyB;MAAlD,wXAAsE,IACpE,o9CAAkC,MAChC,+IAAW,wCAAO,MAClB;;;;;;;;;;;;;;;;;;;;;g7BAAsF,KACtF,mLAA8C,IAGhD,29CAAkC,MAChC,gJAAW,yCAAQ,MACnB;;;;;;;;;;;;;;;;;;;;;g7BAAwF,KACxF,mLAA+C,IAGjD,69CAAkC,MAChC,gJAAW,0CAAS,MACpB;;;;;;;;;;;;;;;;;;;;;i7BAA8E,KAC9E,mLAA+C,IAGjD,69CAAkC,MAChC,gJAAW,yCAAQ,MACnB,2WAAoB,mCAAK,MACzB,sNAAU,2DAA0B,MACpC;;;;;;;;;;;;;;;;;;;;;i7BAA8E,KAC9E,mLAA6C,IAQ/C,sGAAyB,KACvB,gNAAiE,yCAAQ,MACzE,qNAAgH,IAGhH,uLAA6D,IAE/D,6EAAK,KACL,0YAAuD,qCAAO,MAC9D,4PAAwE,YAAlB;;wBAAiB;MAAvE,yNAAwE,qCAAO,MAC/E,uLAAqG,iDA1CjG,mBAAkB,OAAxB,YAAsE,EAAhE,SAAkB,GACN,uBAAiB,EAAjC,YAAkC,EAAlB,UAAiB,GAEH,yBAAwB,EAApD,aAAsF,EAA1D,UAAwB,GAAC,qCAAgC,EAArE,uBAAW,EAA3B,aAAsF,EAAjC,UAAgC,EAArE,UAAW,GAChB,sCAAkC,WAA7C,aAA8C,EAAnC,UAAkC,GAG/B,uBAAiB,EAAjC,aAAkC,EAAlB,UAAiB,GAEH,0BAAyB,EAArD,aAAwF,EAA5D,UAAyB,GAAC,sCAAiC,EAAvE,uBAAW,EAA3B,aAAwF,EAAlC,UAAiC,EAAvE,UAAW,GAChB,uCAAmC,WAA9C,aAA+C,EAApC,UAAmC,GAGhC,wBAAiB,EAAjC,aAAkC,EAAlB,WAAiB,GAEH,2BAAyB,EAArD,aAA8E,EAAlD,WAAyB,GAAC,6BAAuB,EAA7D,wBAAW,EAA3B,aAA8E,EAAxB,WAAuB,EAA7D,WAAW,GAChB,wCAAmC,WAA9C,aAA+C,EAApC,WAAmC,GAGhC,wBAAiB,EAAjC,aAAkC,EAAlB,WAAiB,GAE/B,aAAoB,GAEQ,yBAAuB,EAAnD,aAA8E,EAAlD,WAAuB,GAAC,+BAAyB,EAA7D,wBAAW,EAA3B,aAA8E,EAA1B,WAAyB,EAA7D,WAAW,GAChB,sCAAiC,WAA5C,aAA6C,EAAlC,WAAiC,GAUC,qBAAkE,gCAA/G,cAAgH,EAAnE,WAAkE,GAGpG,gDAAiD,yBAA5D,cAA6D,EAAlD,WAAiD,GAGpC,0BAAc,EAAxC,cAAuD,EAA7B,WAAc,GACd,0BAAc,EAAxC,cAAwE,EAA9C,WAAc,GACe,uCAAsB,GAA7E,cAAqG,EAA9C,WAAsB,2BA1C/E,iaAAsE,GACpE,s5CAAkC,IAEhC,o8BAAsF,IAIxF,g7CAAkC,IAEhC,o8BAAwF,IAI1F,08CAAkC,IAEhC,o+BAA8E,IAIhF,09CAAkC,IAEhC,oEAAoB,GACpB,sKAAU,GACV,o+BAA8E,IAiBhF,yKAAuD,GACvD,yKAAwE;gEA3C5E,gMAAU,IACR,kLAA+B,IAC/B,kLAAsE,iDADzD,mBAAiB,YAA9B,YAA+B,EAAlB,SAAiB,GACqB,oBAAkB,YAArE,YAAsE,EAAnB,SAAkB;;;;;;;;;;;;;;;;;;;;ACFvE,oGAAkD;AAClD,wGAAyG;AACzG,0GAAkD;AAClD,4GAAgF;AAEhF,mFAA0B;AAC1B,iHAA2D;AAC3D,4GAA2C;AAG3C;IAgBE,2CAA2C;IAC3C,+BAAmB,aAA4B,EAAS,KAAqB,EAAU,WAAwB,EAAS,YAA0B,EAAS,QAAkB,EAAS,MAAc;QAAjL,kBAAa,GAAb,aAAa,CAAe;QAAS,UAAK,GAAL,KAAK,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAS,iBAAY,GAAZ,YAAY,CAAc;QAAS,aAAQ,GAAR,QAAQ,CAAU;QAAS,WAAM,GAAN,MAAM,CAAQ;QAVpM,cAAS,GAAG,KAAK,CAAC;QAElB,eAAU,GAAG,EAAE,CAAC;QAChB,0BAAqB,GAAG,CAAC,CAAC;QAC1B,wBAAmB,GAAG,CAAC,CAAC;QAChB,UAAK,GAAG,QAAQ,CAAC;QAMvB,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QAEzC;;;;;;;;;;;;;;;;;;;;;;UAsBE;QAEF;;;;;;;;;;;;;;;;;;;;;;UAsBE;IAEA,CAAC;IAED,wCAAQ,GAAR;QAAA,iBAyEC;QAxEC,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;QAC9C,8BAA8B;QAC9B,mGAAmG;QACnG,oGAAoG;QACpG,2EAA2E;QAC3E,4CAA4C;QAC5C,0IAA0I;QAC1I,oFAAoF;QACpF,MAAM;QAEN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjC,QAAQ,EAAE,IAAI,mBAAW,CAAC,IAAI,EAAE,EAAC,UAAU,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC;YAC7F,SAAS,EAAE,IAAI,mBAAW,CAAC,IAAI,EAAE,EAAC,UAAU,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC;YAC9F,SAAS,EAAE,IAAI,mBAAW,CAAC,IAAI,EAAE,EAAC,UAAU,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,EAAC,CAAC;YACrE,4CAA4C;YAC5C,OAAO,EAAE,IAAI,mBAAW,CAAC,IAAI,EAAE,EAAC,UAAU,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,kBAAU,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,EAAC,CAAC;YACtI,QAAQ,EAAE,IAAI,iBAAS,CAAC,EAAE,EAAE,qBAAqB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;SAC/E,CAAC,CAAC;QAEH,SAAE,CAAC,qBAAqB,CAAC,SAAS,EAAE,CAAC,CAAC,SAAS,CAAC,gBAAM;YACpD,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC;YACzB,KAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,GAAG,CAAC,yBAAyB,GAAG,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACpE,OAAO,CAAC,GAAG,CAAC,yBAAyB,GAAG,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAElE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAE,UAAC,QAAkB;YAChD,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,QAAQ,CAAC,CAAC;YACrC,qFAAqF;YACrF,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,SAAO,CAAC,gBAAW,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAG,CAAC,EAAvD,CAAuD,CAAC,CAAC;YACtG,8DAA8D;YAC9D,uCAAuC;YACvC,oDAAoD;YACpD,yCAAyC;YACzC,QAAQ;YACR,MAAM;YACN,OAAO,CAAC,GAAG,CAAC,yBAAyB,GAAG,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;YAClE,IAAI,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;gBAC5B,yCAAyC;gBACjD;;;;;;kBAME;gBACM,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC;gBACpB,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBACzC,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,oBAAU;oBAC9D,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,4CAA4C;oBAC5C,+KAA+K;oBAC/K,4CAA4C;oBAC5C,KAAI,CAAC,MAAM,GAAG,EAAC,EAAE,EAAE,UAAU,CAAC,EAAE,EAAE,MAAM,EAAE,UAAU,CAAC,MAAM,EAAE,OAAO,EAAE,UAAU,CAAC,OAAO,EAAE,OAAO,EAAE,UAAU,CAAC,OAAO,EAAE,KAAK,EAAE,UAAU,CAAC,KAAK,EAAE,MAAM,EAAE,UAAU,CAAC,MAAM,EAAC,CAAC;oBAC3K,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;oBACxB,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC;oBAC/C,oDAAoD;oBACpD,OAAO,CAAC,GAAG,CAAC,qBAAqB,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;oBACvD,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;oBAEzB,4CAA4C;oBAC5C,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAC,MAAM,EAAE,KAAI,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,EAAE,KAAI,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,EAAE,KAAI,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,EAAE,KAAI,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,EAAE,KAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBACpK,yCAAyC;oBACzC,KAAI,CAAC,aAAa,EAAE,CAAC;gBACvB,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,KAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;gBACtB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;aACtB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2CAA2C;IAC5B,+BAAS,GAAxB;QACG,OAAO;YACL,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE;YACpE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE;YACrE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE;YACnE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,WAAW,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE;SAC7D,CAAC;IACN,CAAC;IAED,sBAAI,uCAAI;aAAR;YACE,OAAO,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC;aAED,UAAS,KAAa;YACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC;;;OAJA;IAMO,6CAAa,GAArB;QAAA,iBAUC;QATC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC;YAC3B,qGAAqG;YACrG,IAAM,OAAO,GAAG,IAAI,mBAAW,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,qDAAqD;YAChG,yCAAyC;YACzC,2CAA2C;YAC1C,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACzD,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACvC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAClD,CAAC;IAED,4CAAY,GAAZ;QAAA,iBAwBC;QAvBC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAC5B,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACrB,OAAO;SACR;QACD,IAAM,iBAAiB,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM;aAC7C,GAAG,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,QAAC,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAlC,CAAkC,CAAC;aACjD,MAAM,CAAC,WAAC,IAAI,QAAC,KAAK,IAAI,EAAV,CAAU,CAAC,CAAC;QAC3B,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAE/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,OAAO,CAAC,GAAG,CAAC,qBAAqB,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;QAChD,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,uFAAuF;QACvF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,SAAO,CAAC,gBAAW,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAG,CAAC,EAApD,CAAoD,CAAC,CAAC;QAChG,IAAI,IAAI,CAAC,KAAK,KAAK,QAAQ,EAAE;YACvB,4CAA4C;YAC5C,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;SAC3J;aAAM,IAAI,IAAI,CAAC,KAAK,KAAK,MAAM,EAAE;YAC5B,4CAA4C;YAC5C,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;SAC7K;QACD,kBAAkB;QAClB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IACpB,CAAC;IAED,6CAAa,GAAb;QACE,yCAAyC;QACzC,uCAAuC;QACvC,0CAA0C;QAC1C,IAAI,CAAC,mBAAmB,GAAG,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAmB,CAAC,CAAC;QACjF,OAAO,IAAI,CAAC,mBAAmB,CAAC;IAClC,CAAC;IAED,qCAAK,GAAL;QACE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IACpB,CAAC;IAED,0CAAU,GAAV;QACE,mDAAmD;QACnD,0DAA0D;QAC1D,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvD,2DAA2D;QAC3D,mCAAmC;IACrC,CAAC;IACH,4BAAC;AAAD,CAAC;AAvNY,sDAAqB;AAyNlC,SAAS,qBAAqB,CAAC,GAAO;IAAP,6BAAO;IACpC,IAAM,SAAS,GAAgB,UAAC,SAAoB;QAClD,2CAA2C;QAC3C,mCAAmC;QACnC,2DAA2D;QAC3D,OAAO,aAAa,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;IACrE,CAAC,CAAC;IACF,OAAO,SAAS,CAAC;AACnB,CAAC;AAED,SAAS,aAAa,CAAC,SAAoB;IACzC,OAAO,SAAS,CAAC,QAAQ;SACtB,GAAG,CAAC,iBAAO,IAAI,cAAO,CAAC,KAAK,EAAb,CAAa,CAAC;SAC7B,MAAM,CAAC,UAAC,IAAI,EAAE,IAAI,IAAK,WAAI,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,EAAzB,CAAyB,EAAE,CAAC,CAAC,CAAC;AAC1D,CAAC;AACD,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8DCvPF,wrBAA+B;8DAE7B,yfAAoD,IAClD;;;;;;2UAA4B,mCAAmB,MAC/C,uEAAG,sCAAoB,MACvB,6LAAgB,IACd;;;;;;yNAAkE,GAApC,aAAmC,GAAjE,wJAAkE,oCAAM,MACxE,+NAA8D,YAA9B;;wBAA6B;MAA7D,wNAA8D,oCAAM,gEADtC,2CAAmC,wBAAjE,aAAkE,EAApC,UAAmC,GAAnD,0BAAe,EAA7B,aAAkE,EAApD,UAAe,GACV,uBAAY,EAA/B,aAA8D,EAA3C,UAAY,2BALnC,yHAAoD,GAClD,khBAA4B,uEAAmB,GAC5C,wEAAoB,GAErB,mZAAkE,GAClE,kKAA8D;8DANpE,oNAAuE,IACrE,iNAAoD,iDADvC,sBAAY,EAA3B,YAAuE,EAAxD,SAAY,GACJ,mBAA8B,UAAnD,YAAoD,EAA/B,SAA8B;8DASrD,mKAAkK,YAA3D;;wBAA6B;MAApI,+QAAkK,mDAAnJ,mBAAuB,eAAC,mBAA2B,iBAAC,mBAAmC,kBAAtG,YAAkK,EAAnJ,SAAuB,EAAC,SAA2B,EAAC,SAAmC;8DACtG,2GAA4E,gEAA8B;8DAZ1G,mLAA+B,IAC/B,mLAAuE,IAUvE,mLAAkK,IAClK,mLAA4E,iDAZ/D,mBAAiB,YAA9B,YAA+B,EAAlB,SAAiB,GACF,iDAA0C,aAAtE,YAAuE,EAA3C,SAA0C,GAU+D,uCAA4B,GAAjK,YAAkK,EAA7B,SAA4B,GACjI,kDAA2C,aAA3E,YAA4E,EAA5C,SAA2C;;;;;;;;;;;;;;;;;;;;ACZ3E,oGAA6D;AAE7D,0GAAkD;AAElD,uHAAgE;AAIhE;IAgBE,6BAAmB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QAR/C,YAAO,GAAa,EAAE,CAAC;QACvB,cAAS,GAAG,KAAK,CAAC;QAClB,iBAAY,GAAG,CAAC,CAAC;QACjB,mBAAc,GAAG,EAAE,CAAC;QACpB,gBAAW,GAAG,CAAC,CAAC;QAChB,oBAAe,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IAGkB,CAAC;IAEjD,sCAAQ,GAAR;QAAA,iBAWC;QAVC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QACrE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,uBAAuB,EAAE;aAC5D,SAAS,CACR,UAAC,UAAoD;YACnD,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,KAAI,CAAC,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC;YAClC,KAAI,CAAC,YAAY,GAAG,UAAU,CAAC,WAAW,CAAC;QAC7C,CAAC,CACF,CAAC;IACJ,CAAC;IAED,sCAAQ,GAAR,UAAS,QAAgB;QAAzB,iBAKC;QAJC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC;YAClD,KAAI,CAAC,aAAa,CAAC,UAAU,CAAC,KAAI,CAAC,cAAc,EAAE,KAAI,CAAC,WAAW,CAAC,CAAC;QACvE,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0CAAY,GAAZ,UAAa,QAAmB;QAC9B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,SAAS,GAAG,CAAC,CAAC;QAC1C,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,QAAQ,CAAC;QACxC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IACvE,CAAC;IAED,yCAAW,GAAX;QACE,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;IAC/B,CAAC;IACH,0BAAC;AAAD,CAAC;AA1CU,kDAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfhC,uHAAqD;AAGrD;IACwC,sCAAgB;IADxD;QAAA,qEAkBC;QAhBC,uBAAiB,GAAG,uBAAuB,CAAC;QAC5C,mBAAa,GAAO,kBAAkB,CAAC;QACvC,uBAAiB,GAAG,iBAAiB,CAAC;QAEtC,mBAAa,GAAG,UAAU,IAAI,EAAE,QAAQ,EAAE,MAAM;YAC9C,IAAI,MAAM,KAAK,CAAC,IAAI,QAAQ,KAAK,CAAC,EAAE;gBAClC,OAAO,OAAO,GAAG,MAAM,CAAC;aACzB;YACD,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAC7B,IAAM,UAAU,GAAG,IAAI,GAAG,QAAQ,CAAC;YACnC,2FAA2F;YAC3F,IAAM,QAAQ,GAAG,UAAU,GAAG,MAAM,CAAC,CAAC;gBACpC,IAAI,CAAC,GAAG,CAAC,UAAU,GAAG,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;gBACzC,UAAU,GAAG,QAAQ,CAAC;YACxB,OAAO,UAAU,GAAG,CAAC,GAAG,KAAK,GAAG,QAAQ,GAAG,MAAM,GAAG,MAAM,CAAC;QAC7D,CAAC,CAAC;;IACJ,CAAC;IAAD,yBAAC;AAAD,CAAC,CAjBuC,2BAAgB,GAiBvD;AAjBY,gDAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8DCCzB,mMAA8C,wEAAuC,iCAArF,0DAA8C;8DAM9C,oMAA+C,yEAAwC,iCAAvF,0DAA+C;8DAM/C,oMAA+C,2EAA0C,iCAAzF,0DAA+C;8DAM/C,oMAA6C,mEAAkC,iCAA/E,0DAA6C;8DAM3C,6EAAoC,sJAAqB;8DAD3D,iGAAsE,KACpE,mLAAoC,iDAA9B,oCAA6B,iBAAnC,YAAoC,EAA9B,SAA6B;8DA7B3C,+LAAU,IACR;;;;;;8XAAyB,IACvB,65CAAgB,MACd,+IAAW,wCAAO,MAClB;;;;;;;;;;;;;;;;;;;;;g7BAAsF,KACtF,iLAA8C,IAGhD,o6CAAgB,MACd,gJAAW,yCAAQ,MACnB;;;;;;;;;;;;;;;;;;;;;g7BAAwF,KACxF,iLAA+C,IAGjD,s6CAAgB,MACd,gJAAW,0CAAS,MACpB;;;;;;;;;;;;;;;;;;;;;i7BAA8E,KAC9E,iLAA+C,IAGjD,s6CAAgB,MACd,gJAAW,yCAAQ,MACnB;;;;;;;;;;;;;;;;;;;;;i7BAA8E,KAC9E,iLAA6C,IAG/C,qGAAyB,KACvB,yOAA4F,yCAAQ,MACpG,mNAAsE,IAIxE,6EAAK,kDA/BD,mBAAkB,OAAxB,YAAyB,EAAnB,SAAkB,GAGQ,yBAAwB,EAApD,aAAsF,EAA1D,UAAwB,GAAC,qCAAgC,EAArE,uBAAW,EAA3B,aAAsF,EAAjC,UAAgC,EAArE,UAAW,GAChB,sCAAkC,WAA7C,aAA8C,EAAnC,UAAkC,GAKjB,0BAAyB,EAArD,aAAwF,EAA5D,UAAyB,GAAC,sCAAiC,EAAvE,uBAAW,EAA3B,aAAwF,EAAlC,UAAiC,EAAvE,UAAW,GAChB,uCAAmC,WAA9C,aAA+C,EAApC,UAAmC,GAKlB,2BAAyB,EAArD,aAA8E,EAAlD,WAAyB,GAAC,6BAAuB,EAA7D,wBAAW,EAA3B,aAA8E,EAAxB,WAAuB,EAA7D,WAAW,GAChB,wCAAmC,WAA9C,aAA+C,EAApC,WAAmC,GAKlB,yBAAuB,EAAnD,aAA8E,EAAlD,WAAuB,GAAC,+BAAyB,EAA7D,wBAAW,EAA3B,aAA8E,EAA1B,WAAyB,EAA7D,WAAW,GAChB,sCAAiC,WAA5C,aAA6C,EAAlC,WAAiC,GAKtB,qBAA+C,aAArE,cAAsE,EAAhD,WAA+C,2BA3BzE,iaAAyB,GACvB,s5CAAgB,IAEd,o8BAAsF,IAIxF,g7CAAgB,IAEd,o8BAAwF,IAI1F,s8CAAgB,IAEd,o+BAA8E,IAIhF,09CAAgB,IAEd,o+BAA8E;;;;;;;;;;;;;;;;;;;;ACtBpF,oGAAgD;AAChD,wGAA0F;AAC1F,0GAAgD;AAChD,4GAAiE;AAEjE,mFAAwB;AACxB,iHAAyD;AACzD,4GAAyC;AAEzC;IAYE,2CAA2C;IAC3C,6BAAmB,aAA4B,EAAS,KAAqB,EAAU,WAAwB,EAAS,YAA0B,EAAS,QAAkB,EAAS,MAAc;QAAjL,kBAAa,GAAb,aAAa,CAAe;QAAS,UAAK,GAAL,KAAK,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAS,iBAAY,GAAZ,YAAY,CAAc;QAAS,aAAQ,GAAR,QAAQ,CAAU;QAAS,WAAM,GAAN,MAAM,CAAQ;QALpM,eAAU,GAAG,EAAE,CAAC;QACR,UAAK,GAAG,MAAM,CAAC;QAKrB,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QACvC;;;;;;;;;;;;;;;;;;;;;;UAsBE;QAEF;;;;;;;;;;;;;;;;;;;;;;UAsBE;IAEA,CAAC;IAED,sCAAQ,GAAR;QAAA,iBAmDC;QAlDC,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;QAC5C,8BAA8B;QAC9B,mGAAmG;QACnG,oGAAoG;QACpG,2EAA2E;QAC3E,4CAA4C;QAC5C,0IAA0I;QAC1I,oFAAoF;QACpF,MAAM;QAEN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjC,QAAQ,EAAE,IAAI,mBAAW,CAAC,IAAI,EAAE,EAAC,UAAU,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC;YAC7F,SAAS,EAAE,IAAI,mBAAW,CAAC,IAAI,EAAE,EAAC,UAAU,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC;YAC9F,SAAS,EAAE,IAAI,mBAAW,CAAC,IAAI,EAAE,EAAC,UAAU,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,EAAC,CAAC;YACrE,4CAA4C;YAC5C,OAAO,EAAE,IAAI,mBAAW,CAAC,IAAI,EAAE,EAAC,UAAU,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,kBAAU,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,EAAC,CAAC;YACtI,iFAAiF;YACjF,QAAQ,EAAE,IAAI,iBAAS,CAAC,EAAE,EAAE,IAAI,CAAC;SAClC,CAAC,CAAC;QAEH,SAAE,CAAC,mBAAmB,CAAC,SAAS,EAAE,CAAC,CAAC,SAAS,CAAC,gBAAM;YAClD,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC;YACzB,KAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAE,UAAC,QAAkB;YAChD,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,QAAQ,CAAC,CAAC;YACrC,qFAAqF;YACrF,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,SAAO,CAAC,gBAAW,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAG,CAAC,EAAvD,CAAuD,CAAC,CAAC;YACtG,8DAA8D;YAC9D,uCAAuC;YACvC,oDAAoD;YACpD,yCAAyC;YACzC,QAAQ;YACR,MAAM;YACN,OAAO,CAAC,GAAG,CAAC,yBAAyB,GAAG,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;YAClE,IAAI,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;gBAC5B,yCAAyC;gBACzC,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBACzC,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,oBAAU;oBAC9D,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;oBAC/B,2CAA2C;oBAC3C,KAAI,CAAC,MAAM,GAAG,EAAC,EAAE,EAAE,UAAU,CAAC,EAAE,EAAE,MAAM,EAAE,UAAU,CAAC,MAAM,EAAE,OAAO,EAAE,UAAU,CAAC,OAAO,EAAE,OAAO,EAAE,UAAU,CAAC,OAAO,EAAE,KAAK,EAAE,UAAU,CAAC,KAAK,EAAE,MAAM,EAAE,UAAU,CAAC,MAAM,EAAC,CAAC;oBAC3K,4CAA4C;oBAC5C,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAC,MAAM,EAAE,KAAI,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,EAAE,KAAI,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,EAAE,KAAI,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,EAAE,KAAI,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,EAAE,KAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBACpK,yCAAyC;oBACzC,KAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;gBAClC,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2CAA2C;IAC5B,6BAAS,GAAxB;QACG,OAAO;YACL,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE;YACpE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE;YACrE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE;YACnE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,WAAW,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE;SAC7D,CAAC;IACN,CAAC;IAED,sBAAI,qCAAI;aAAR;YACE,OAAO,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC;aAED,UAAS,KAAa;YACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC;;;OAJA;IAMO,2CAAa,GAArB;QAAA,iBAUC;QATC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC;YAC3B,qGAAqG;YACrG,IAAM,OAAO,GAAG,IAAI,mBAAW,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,qDAAqD;YAChG,yCAAyC;YACzC,2CAA2C;YAC1C,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACzD,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACvC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAClD,CAAC;IACH,0BAAC;AAAD,CAAC;AA9IY,kDAAmB;;;;;;;;;;;;;;;ACZhC,mFAA+B;AAC/B,6GAA+D;AAC/D,4GAAqC;AACrC,4GAAyC;;;;AAEzC;IAME,uBAAoB,IAAgB,EAAU,MAAc;QAAxC,SAAI,GAAJ,IAAI,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QAJpD,YAAO,GAAa,EAAE,CAAC;QACvB,kBAAa,GAAG,IAAI,cAAO,EAA4C,CAAC;QACxE,QAAG,GAAG,mCAAmC,CAAC;IAEa,CAAC;IAEhE,kCAAU,GAAV,UAAW,aAAqB,EAAE,WAAmB;QAArD,iBAwBC;QAvBC,IAAM,WAAW,GAAG,eAAa,aAAa,cAAS,WAAa,CAAC;QACrE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAuD,IAAI,CAAC,GAAG,GAAG,WAAW,CAAC;aAC1F,IAAI,CAAC,eAAG,CAAC,UAAC,UAAU;YACnB,OAAO;gBACL,OAAO,EAAE,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,gBAAM;oBACpC,OAAO;wBACL,EAAE,EAAE,MAAM,CAAC,GAAG;wBACd,MAAM,EAAE,MAAM,CAAC,MAAM;wBACrB,OAAO,EAAE,MAAM,CAAC,OAAO;wBACvB,OAAO,EAAE,MAAM,CAAC,OAAO;wBACvB,KAAK,EAAE,MAAM,CAAC,KAAK;wBACnB,MAAM,EAAE,MAAM,CAAC,MAAM;qBACtB,CAAC;gBACJ,CAAC,CAAC;gBACF,UAAU,EAAE,UAAU,CAAC,UAAU;aAClC,CAAC;QACJ,CAAC,CAAC,CAAC;aACF,SAAS,CAAC,+BAAqB;YAC9B,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;YACnC,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,OAAO,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,SAAO,CAAC,gBAAW,qBAAqB,CAAC,CAAC,CAAG,CAAC,EAA1D,CAA0D,CAAC,CAAC;YAC5G,KAAI,CAAC,OAAO,GAAG,qBAAqB,CAAC,OAAO,CAAC;YAC7C,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAC,OAAO,EAAM,KAAI,CAAC,OAAO,QAAC,EAAE,WAAW,EAAE,qBAAqB,CAAC,UAAU,EAAC,CAAC,CAAC;QACvG,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+CAAuB,GAAvB;QACE,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;IAC3C,CAAC;IAED,iCAAS,GAAT,UAAU,EAAU;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAmG,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC;IACxI,CAAC;IAED,iCAAS,GAAT,UAAU,MAAc,EAAE,OAAe,EAAE,OAAe,EAAE,KAAa,EAAE,MAAiB;QAA5F,iBA+CC;QA9CC,IAAM,OAAO,GAAG,IAAI,kBAAW,EAAE,CAAC;QAClC,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,+BAA+B,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;QAChF,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;QAC7C,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;QAE1E;;;;;;WAMG;QAEC,IAAI,UAA6B,CAAC;QAElC,+BAA+B;QAC/B,uCAAuC;QACvC,yCAAyC;QACzC,yCAAyC;QACzC,qCAAqC;QACrC,uCAAuC;QAEvC,UAAU,GAAG;YACX,EAAE,EAAE,EAAE;YACN,MAAM,EAAE,MAAM;YACd,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,KAAK,EAAE,KAAK;YACZ,MAAM,EAAE,MAAM;SACf,CAAC;QAEF,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;QAChD,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACxB,uCAAuC;QACvC,qCAAqC;QACrC,MAAM;QACN,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,SAAO,CAAC,gBAAW,UAAU,CAAC,CAAC,CAAG,CAAC,EAA/C,CAA+C,CAAC,CAAC;QAGtF,IAAI,CAAC,IAAI;YACT,wEAAwE;aACvE,IAAI,CAA8E,IAAI,CAAC,GAAG,EAAE,UAAU,EAAE,EAAE,OAAO,WAAE,CAAC;aACpH,SAAS,CAAC,kBAAQ;YACjB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oCAAY,GAAZ,UAAa,EAAU,EAAE,MAAc,EAAE,OAAe,EAAE,OAAe,EAAE,KAAa,EAAE,MAAiB;QAA3G,iBAiCD;QAhCG,IAAI,UAA6B,CAAC;QAEhC,+BAA+B;QAC/B,+BAA+B;QAC/B,uCAAuC;QACvC,yCAAyC;QACzC,yCAAyC;QACzC,qCAAqC;QACrC,uCAAuC;QAEzC,UAAU,GAAG;YACX,EAAE,EAAE,EAAE;YACN,MAAM,EAAE,MAAM;YACd,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,KAAK,EAAE,KAAK;YACZ,MAAM,EAAE,MAAM;SACf,CAAC;QAEF,OAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC;QAClD,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACxB,uCAAuC;QACvC,qCAAqC;QACrC,MAAM;QACN,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,SAAO,CAAC,gBAAW,UAAU,CAAC,CAAC,CAAG,CAAC,EAA/C,CAA+C,CAAC,CAAC;QAEtF,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,EAAE,EAAE,UAAU,CAAC;YACxC,SAAS,CAAC,kBAAQ;YAChB,yCAAyC;YACzC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACP,CAAC;IAEC,oCAAY,GAAZ,UAAa,QAAgB;QAC3B,sCAAsC;QACtC,qBAAqB;QACrB,wEAAwE;QACxE,+BAA+B;QAC/B,6CAA6C;QAC7C,MAAM;QACN,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,CAAC;IAC/C,CAAC;;wBA7IH;CA8IC;AAtIY,sCAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0DCApB;;;;;;inBAAsF,2CAAa,2BAArF,yBAAoB,EAAlC,YAAsF,EAAxE,SAAoB,GAAsB,4BAA6B,EAArF,YAAsF,EAA9B,SAA6B,2BAArF,gYAAsF;0DAGtF;;;;;;inBAAsF,iDAAc,2BAAtF,wBAAmB,EAAjC,YAAsF,EAAxE,SAAmB,GAAuB,4BAA6B,EAArF,YAAsF,EAA9B,SAA6B,2BAArF,gYAAsF;0DAGtF;;;;;;inBAAuF,wCAAU,2BAAnF,yBAAoB,EAAlC,YAAuF,EAAzE,SAAoB,GAAuB,4BAA6B,EAAtF,YAAuF,EAA9B,SAA6B,2BAAtF,gYAAuF;0DAGvF;;;;;;inBAAsF,gDAAa,2BAArF,yBAAoB,EAAlC,YAAsF,EAAxE,SAAoB,GAAsB,4BAA6B,EAArF,YAAsF,EAA9B,SAA6B,2BAArF,gYAAsF;0DAjB5F,mZAA6B,MAE3B,0EAAM,KACJ;;;iLAAkB,oCAAa,MAEjC,6FAAqB,KACrB,yEAAI,KACF,2EAAI,KACF,gLAAsF,IAExF,4EAAI,KACF,gLAAsF,IAExF,4EAAI,KACF,gLAAuF,IAEzF,4EAAI,KACF,gLAAsF,iDAjB/E,yBAAe,EAA5B,YAA6B,EAAhB,SAAe,GAGrB,mBAAc,EAAjB,YAAkB,EAAf,SAAc,GAKoB,mBAAoB,eAAvD,aAAsF,EAAnD,SAAoB,GAGrB,oBAAqB,eAAvD,aAAsF,EAApD,SAAqB,GAGpB,oBAAqB,eAAxD,aAAuF,EAApD,SAAqB,GAGrB,oBAAoB,eAAvD,aAAsF,EAAnD,UAAoB,mDAjB7D,2IAA6B,GAGzB,8GAAkB,uDAAa;;;;;;;;;;;;;;;;;;;;ACDnC;IASE;QACI,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;IACnC,CAAC;IAEM,oCAAU,GAAjB;QACE,OAAO,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,IAAI,CAAC;IACvD,CAAC;IACH,sBAAC;AAAD,CAAC;AAXY,0CAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+DCP5B,+EAAO,KACL,8EAAO,gFAAI,gFAAI,KACb,qGAA0B,KAE5B,8EAAO,gFAAI,gFAAI,KACb,gGAAqB,KACnB,yQAAe,IAGnB,+EAAO,iFAAI,iFAAI,KACb,sGAA0B,0BAJxB,aAAe;;;;;;;;;;;;;;;;;;;;ACNrB,oGAAkD;AAElD;IAOE;QACE,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;IACtC,CAAC;IAED,uCAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;IAC/C,CAAC;IAEH,2BAAC;AAAD,CAAC;AAVY,oDAAoB;;;;;;;;;;;;;;;ACNjC,4GAAuC;;;AAEvC;IAME,sBAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAFlC,eAAU,GAAG,KAAK,CAAC;IAEmB,CAAC;IAEvC,oCAAa,GAAb,UAAc,YAAoB,EAAE,YAAoB;QACtD,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;QAC1C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,sBAAsB;QACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE;oBAClC,WAAW,EAAE,CAAC,OAAO,EAAE,YAAY,EAAE,YAAY,CAAC;iBACrD,EAAC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,kCAAW,GAAX;QAAA,iBAQC;QAPC,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;QACxC,UAAU,CAAC;YACT,MAAM,CAAC,KAAK,EAAE,CAAC;YACf,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,uDAAuD;YACvD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,EAAC,CAAC,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;IACL,CAAC;;uBA5BH;CA6BC;AAvBY,oCAAY;;;;;;;;;;;;;;ACNzB,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;;AAEnD,mBAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;ACdnE,yEAAkB;AAClB,oGAA+C;AAI/C,+GAAyD;;;AAEzD,IAAI,yBAAW,CAAC,UAAU,EAAE;IAC1B,qBAAc,EAAE,CAAC;CAClB;AAED,qCAAwB,uBAAgB,wCAAW;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ClientListComponent } from './client/client-list/client-list.component';\r\nimport { ClientCreateComponent } from './client/client-create/client-create.component';\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { LogoutComponent } from './auth/logout/logout.component';\r\nimport { SignupComponent } from './auth/signup/signup.component';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { PrintLayoutComponent } from './print/print-layout/print-layout.component';\r\nimport { ClientShowComponent} from './client/client-show/client-show.component';\r\n\r\nconst routes: Routes = [\r\n  // { path: '', component: ClientListComponent},\r\n  { path: '', component: ClientListComponent, canActivate: [AuthGuard] },\r\n  { path: 'create', component: ClientCreateComponent, canActivate: [AuthGuard] },\r\n  { path: 'edit/:clientId', component: ClientCreateComponent, canActivate: [AuthGuard] },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'logout', component: LogoutComponent },\r\n  { path: 'signup', component: SignupComponent },\r\n  // { path: 'show', component: ClientCreateComponent },\r\n  // { path: 'show/:clientId', component: ClientCreateComponent },\r\n  // { path: 'print', component: PrintLayoutComponent},\r\n  // tslint:disable-next-line:max-line-length\r\n  // { path: 'print', outlet: 'printArea', component: PrintLayoutComponent, children: [{ path: 'show/:clientId', component: ClientCreateComponent }]},\r\n  // tslint:disable-next-line:max-line-length\r\n  { path: 'print', outlet: 'printArea', component: PrintLayoutComponent, children: [{ path: 'show/:clientId', component: ClientShowComponent }]}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","  <app-header [MyTitle]=\"'Clientes'\"></app-header>\r\n  <main>\r\n    <router-outlet></router-outlet>\r\n    <div [class.isPrinting]=\"printService.isPrinting\">\r\n      <router-outlet name=\"printArea\"></router-outlet>\r\n    </div>\r\n  </main>\r\n","import { Component } from '@angular/core';\nimport { PrintService} from './print/print.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-node-app';\n\n  constructor(public printService: PrintService) {\n    console.log('AppComponent');\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport {\r\n  MatInputModule,\r\n  MatCardModule,\r\n  MatButtonModule,\r\n  MatToolbarModule ,\r\n  MatExpansionModule,\r\n  MatProgressSpinnerModule,\r\n  MatPaginatorModule,\r\n  MatCheckboxModule,\r\n  MatIconModule\r\n} from '@angular/material';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { ClientCreateComponent } from './client/client-create/client-create.component';\r\nimport { ClientShowComponent } from './client/client-show/client-show.component';\r\nimport { ClientListComponent } from './client/client-list/client-list.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { LogoutComponent } from './auth/logout/logout.component';\r\nimport { SignupComponent } from './auth/signup/signup.component';\r\nimport { PrintLayoutComponent } from './print/print-layout/print-layout.component';\r\nimport { PrintService } from './print/print.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    ClientCreateComponent,\r\n    ClientShowComponent,\r\n    ClientListComponent,\r\n    LoginComponent,\r\n    LogoutComponent,\r\n    SignupComponent,\r\n    PrintLayoutComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatExpansionModule,\r\n    MatProgressSpinnerModule,\r\n    MatPaginatorModule,\r\n    MatCheckboxModule,\r\n    MatIconModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [PrintService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService) {}\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n      return this.authService.isLoggedIn();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthData } from './auth-data.model';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AuthService {\r\n  private uri = 'http://localhost:3000/api/user/';\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  public createUser(email: string, password: string) {\r\n    const authData: AuthData = {email: email, password: password};\r\n    this.http.post(this.uri + 'signup', authData)\r\n    .subscribe(response => {\r\n      console.log(response);\r\n      localStorage.setItem('ACCESS_TOKEN', 'access_token');\r\n      this.router.navigate(['/']);\r\n    });\r\n  }\r\n\r\n  public login(email: string, password: string) {\r\n    const authData: AuthData = {email: email, password: password};\r\n    this.http.post(this.uri + 'login', authData)\r\n    .subscribe(response => {\r\n      console.log(response);\r\n      localStorage.setItem('ACCESS_TOKEN', 'access_token');\r\n      this.router.navigate(['/']);\r\n    });\r\n  }\r\n\r\n  public isLoggedIn() {\r\n    return localStorage.getItem('ACCESS_TOKEN') !== null;\r\n  }\r\n\r\n  public logout() {\r\n    localStorage.removeItem('ACCESS_TOKEN');\r\n    this.router.navigate(['/']);\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n  <form (submit)=\"onLogin(loginform)\" #loginform=\"ngForm\" *ngIf=\"!isLoading\">\r\n    <mat-form-field>\r\n      <input matInput type=\"email\" ngModel name=\"email\" placeholder=\"Correo electronico\" #emailInput=\"ngModel\" required email>\r\n      <mat-error *ngIf=\"emailInput.invalid\">Por favor teclee un correo valido.</mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <input matInput type=\"password\" ngModel name=\"password\" placeholder=\"Contraseña\" #passwordInput=\"ngModel\" required>\r\n      <mat-error *ngIf=\"passwordInput.invalid\">Por favor teclee una contraseña valida.</mat-error>\r\n    </mat-form-field>\r\n    <button mat-raised-button color='accent' type=\"submit\">Iniciar sesión</button>\r\n  </form>\r\n</mat-card>\r\n\r\n","import { Component } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\n\r\nexport class LoginComponent {\r\n  isLoading = false;\r\n\r\n  constructor(public authService: AuthService) {}\r\n\r\n  onLogin(form: NgForm) {\r\n    console.log(form.value);\r\n    if (form.invalid) {\r\n      return;\r\n    }\r\n    this.authService.login(form.value.email, form.value.password);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n  template: ''\r\n})\r\n\r\nexport class LogoutComponent implements OnInit {\r\n  isLoading = false;\r\n\r\n  constructor(public authService: AuthService) {}\r\n\r\n  ngOnInit(): void {\r\n    console.log('LogoutComponent');\r\n    this.authService.logout();\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n  <form (submit)=\"onSignup(signupform)\" #signupform=\"ngForm\" *ngIf=\"!isLoading\">\r\n    <mat-form-field>\r\n      <input matInput type=\"email\" ngModel name=\"email\" placeholder=\"Correo electronico\" #emailInput=\"ngModel\" required email>\r\n      <mat-error *ngIf=\"emailInput.invalid\">Por favor teclee un correo valido.</mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <input matInput type=\"password\" ngModel name=\"password\" placeholder=\"Contraseña\" #passwordInput=\"ngModel\" required>\r\n      <mat-error *ngIf=\"passwordInput.invalid\">Por favor teclee una contraseña valida.</mat-error>\r\n    </mat-form-field>\r\n    <button mat-raised-button color='accent' type=\"submit\">Registrar</button>\r\n  </form>\r\n</mat-card>\r\n\r\n","import { Component } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\n\r\nexport class SignupComponent {\r\n  isLoading = false;\r\n\r\n  constructor(public authService: AuthService) {}\r\n\r\n  onSignup(form: NgForm) {\r\n    console.log(form.value);\r\n    if (form.invalid) {\r\n      return;\r\n    }\r\n    this.authService.createUser(form.value.email, form.value.password);\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n  <form [formGroup]=\"form\" (submit)=\"onSaveClient()\" *ngIf=\"!isLoading\">\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Cliente</mat-label>\r\n      <input matInput type=\"text\" formControlName=\"client\" placeholder=\"Nombre del cliente\">\r\n      <mat-error *ngIf=\"form.get('client').invalid\">Por favor teclee el nombre del cliente.</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Producto</mat-label>\r\n      <input matInput type=\"text\" formControlName=\"product\" placeholder=\"Nombre del producto\">\r\n      <mat-error *ngIf=\"form.get('product').invalid\">Por favor teclee el nombre del producto.</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Direccion</mat-label>\r\n      <input matInput type=\"text\" formControlName=\"address\" placeholder=\"Direccion\">\r\n      <mat-error *ngIf=\"form.get('address').invalid\">Por favor teclee la direccion del cliente.</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Telefono</mat-label>\r\n      <mat-icon matSuffix>phone</mat-icon>\r\n      <mat-hint>Incluye el codigo del area</mat-hint>\r\n      <input matInput type=\"text\" formControlName=\"phone\" placeholder=\"11-11111111\">\r\n      <mat-error *ngIf=\"form.get('phone').invalid\">Por favor el telefono del cliente.</mat-error>\r\n    </mat-form-field>\r\n<!--\r\n    <mat-form-field>\r\n      <input matInput type=\"text\" formControlName=\"extras\" placeholder=\"Extras del cliente\">\r\n      <mat-error *ngIf=\"form.get('extras').invalid\">Por favor escoge una opcion extra.</mat-error>\r\n    </mat-form-field>\r\n  -->\r\n    <div class=\"extras fill\">\r\n      <mat-label class=\"extras-label\" placeholder=\"Extras del cliente\">Extras: </mat-label>\r\n      <div class=\"checkbox\" formArrayName=\"extras\" *ngFor=\"let extra of form.controls.extras.controls; let i = index\">\r\n        <mat-checkbox (change)=\"totalSelected()\" [formControlName]=\"i\">{{extrasData[i].description}}</mat-checkbox>\r\n      </div>\r\n      <mat-error *ngIf=\"totalExtrasSelected<minimumExtrasSelected\">Al menos debes seleccionar un extra</mat-error>\r\n    </div>\r\n    <br/>\r\n    <button mat-raised-button color='accent' type=\"submit\">Guardar</button>\r\n    <button mat-raised-button color='accent' type=\"reset\" (click)=\"reset()\">Limpiar</button>\r\n    <button mat-raised-button color='accent' type=\"button\" *ngIf=\"mode!='create'\" (click)=\"printOrder()\">Imprimir</button>\r\n  </form>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, FormBuilder, FormArray, ValidatorFn } from '@angular/forms';\r\nimport { ClientService } from '../client.service';\r\nimport {ActivatedRoute, NavigationEnd, ParamMap, Router} from '@angular/router';\r\nimport { Client } from '../client.model';\r\nimport { of } from 'rxjs';\r\nimport { PrintService } from 'src/app/print/print.service';\r\nimport { Location } from '@angular/common';\r\nimport {filter, map} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-client-create',\r\n  templateUrl: './client-create.component.html',\r\n  styleUrls: ['./client-create.component.css']\r\n})\r\nexport class ClientCreateComponent implements OnInit {\r\n  client: Client;\r\n  isLoading = false;\r\n  form: FormGroup;\r\n  extrasData = [];\r\n  minimumExtrasSelected = 1;\r\n  totalExtrasSelected = 0;\r\n  private _mode = 'create';\r\n  private clientId: string;\r\n  private path: string;\r\n\r\n  // tslint:disable-next-line:max-line-length\r\n  constructor(public clientService: ClientService, public route: ActivatedRoute, private formBuilder: FormBuilder, public printService: PrintService, public location: Location, public router: Router) {\r\n    console.log('ClientCreateComponent');\r\n\r\n/*\r\n    router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd)\r\n    ).subscribe(() => {\r\n      if (location.path() != '') {\r\n        // console.log('path: ' + location.path());\r\n        // console.log(location.path().substr(location.path().indexOf('/') + 1, location.path().lastIndexOf('/')));\r\n        // console.log(location.path().substring(location.path().indexOf('/') + 1, location.path().lastIndexOf('/')));\r\n        // console.log(location.path().split('/'));\r\n        // console.log(location.path().split('/')[location.path().split('/').length - 2]);\r\n        // console.log(location.path().split('/')[location.path().split('/').length - 1]);\r\n\r\n        if (location.path().split('/').length > 1) {\r\n          this.path = location.path().split('/')[location.path().split('/').length - 2];\r\n        } else {\r\n          this.path = location.path().split('/')[location.path().split('/').length - 1];\r\n        }\r\n        if (this.path === 'show') {\r\n          this.printService.onDataReady();\r\n        }\r\n      }\r\n    });\r\n*/\r\n\r\n/*\r\n    router.events.subscribe((event) => {\r\n      console.log('event: ' + event);\r\n      // tslint:disable-next-line:triple-equals\r\n      if (location.path() != '') {\r\n        // console.log('path: ' + location.path());\r\n        // console.log(location.path().substr(location.path().indexOf('/') + 1, location.path().lastIndexOf('/')));\r\n        // console.log(location.path().substring(location.path().indexOf('/') + 1, location.path().lastIndexOf('/')));\r\n        // console.log(location.path().split('/'));\r\n        // console.log(location.path().split('/')[location.path().split('/').length - 2]);\r\n        // console.log(location.path().split('/')[location.path().split('/').length - 1]);\r\n\r\n        if (location.path().split('/').length > 1) {\r\n          this.path = location.path().split('/')[location.path().split('/').length - 2];\r\n        } else {\r\n          this.path = location.path().split('/')[location.path().split('/').length - 1];\r\n        }\r\n        if (this.path === 'show') {\r\n          this.printService.onDataReady();\r\n        }\r\n      }\r\n    });\r\n*/\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log('ClientCreateComponent ngOnInit');\r\n    // this.form = new FormGroup({\r\n    //   'client': new FormControl(null, {validators: [Validators.required, Validators.minLength(3)]}),\r\n    //   'product': new FormControl(null, {validators: [Validators.required, Validators.minLength(3)]}),\r\n    //   'address': new FormControl(null, {validators: [Validators.required]}),\r\n    // tslint:disable-next-line: max-line-length\r\n    // 'phone': new FormControl(null, {validators: [Validators.required, Validators.minLength(11), Validators.pattern('[0-9]{2}-[0-9]{8}')]}),\r\n    //    'extras': new FormArray([], minSelectedCheckboxes(this.minimumExtrasSelected))\r\n    // });\r\n\r\n    this.form = this.formBuilder.group({\r\n      'client': new FormControl(null, {validators: [Validators.required, Validators.minLength(3)]}),\r\n      'product': new FormControl(null, {validators: [Validators.required, Validators.minLength(3)]}),\r\n      'address': new FormControl(null, {validators: [Validators.required]}),\r\n      // tslint:disable-next-line: max-line-length\r\n      'phone': new FormControl(null, {validators: [Validators.required, Validators.minLength(11), Validators.pattern('[0-9]{2}-[0-9]{8}')]}),\r\n      'extras': new FormArray([], minSelectedCheckboxes(this.minimumExtrasSelected))\r\n    });\r\n\r\n    of(ClientCreateComponent.getExtras()).subscribe(extras => {\r\n      this.extrasData = extras;\r\n      this.addCheckboxes();\r\n    });\r\n\r\n    console.log('Minim extras selected: ' + this.minimumExtrasSelected);\r\n    console.log('Total extras selected: ' + this.totalExtrasSelected);\r\n\r\n    this.route.paramMap.subscribe( (paramMap: ParamMap) => {\r\n      console.log('paramMap: ' + paramMap);\r\n      // Object.keys(paramMap).forEach(e => console.log(`key=${e}  value=${paramMap[e]}`));\r\n      Object.keys(paramMap['params']).forEach(e => console.log(`key=${e}  value=${paramMap['params'][e]}`));\r\n      // Object.keys(paramMap['params']).forEach((value1, key1) => {\r\n      //   console.log(key1 + ': ' + value1);\r\n      //   Object.keys(value1).forEach((value2, key2) => {\r\n      //     console.log(key2 + ': ' + value2);\r\n      //   });\r\n      // });\r\n      console.log('paramMap has clientId: ' + paramMap.has('clientId'));\r\n      if (paramMap.has('clientId')) {\r\n        // tslint:disable-next-line:triple-equals\r\n/*\r\n        if (this.path == 'edit') {\r\n          this._mode = 'edit';\r\n        } else {\r\n          this._mode = 'show';\r\n        }\r\n*/\r\n        this._mode = 'edit';\r\n        this.clientId = paramMap.get('clientId');\r\n        this.isLoading = true;\r\n        this.clientService.getClient(this.clientId).subscribe(clientData => {\r\n          this.isLoading = false;\r\n          // tslint:disable-next-line: max-line-length\r\n          // this.client = {id: clientData._id, client: clientData.client, product: clientData.product, address: clientData.address, phone: clientData.phone, extras: clientData.extras};\r\n          // tslint:disable-next-line: max-line-length\r\n          this.client = {id: clientData.id, client: clientData.client, product: clientData.product, address: clientData.address, phone: clientData.phone, extras: clientData.extras};\r\n          console.log(clientData);\r\n          console.log('clientData.id: ' + clientData.id);\r\n          // console.log('clientData._id: ' + clientData._id);\r\n          console.log('clientData.client: ' + clientData.client);\r\n          console.log(this.client);\r\n\r\n          // tslint:disable-next-line: max-line-length\r\n          this.form.setValue({client: this.client.client, product: this.client.product, address: this.client.address, phone: this.client.phone, extras: this.client.extras });\r\n          // tslint:disable-next-line:triple-equals\r\n          this.totalSelected();\r\n        });\r\n      } else {\r\n        this._mode = 'create';\r\n        this.clientId = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  // tslint:disable-next-line:member-ordering\r\n  private static getExtras() {\r\n     return [\r\n       { id: 1, name: 'pocchuc', description: 'Poc chuc', selected: false },\r\n       { id: 2, name: 'aguacate', description: 'Aguacate', selected: false },\r\n       { id: 3, name: 'cebolla', description: 'Cebolla', selected: false },\r\n       { id: 4, name: 'papa', description: 'Papa', selected: false }\r\n      ];\r\n  }\r\n\r\n  get mode(): string {\r\n    return this._mode;\r\n  }\r\n\r\n  set mode(value: string) {\r\n    this._mode = value;\r\n  }\r\n\r\n  private addCheckboxes() {\r\n    this.extrasData.forEach((o, i) => {\r\n      // const control = new FormControl(i === 0); // if first item set to true, else false, first selected\r\n      const control = new FormControl(i === -1); // if first item set to true, else false, no selected\r\n      // const control = new FormControl(o.id);\r\n      // const control = new FormControl(o.name);\r\n      (this.form.controls.extras as FormArray).push(control);\r\n    });\r\n    console.log(this.form.controls.extras);\r\n    console.log(this.form.controls.extras.get('0'));\r\n  }\r\n\r\n  onSaveClient() {\r\n    console.log('onSaveClient');\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n    const selectedExtrasIds = this.form.value.extras\r\n      .map((v, i) => (v ? this.extrasData[i].id : null))\r\n      .filter(v => v !== null);\r\n    console.log(selectedExtrasIds);\r\n\r\n    this.isLoading = true;\r\n    console.log('onSaveClient mode: ' + this._mode);\r\n    console.log('form: ');\r\n    // Object.keys(this.form).forEach(e => console.log(`key=${e}  value=${this.form[e]}`));\r\n    Object.keys(this.form.value).forEach(e => console.log(`key=${e}  value=${this.form.value[e]}`));\r\n    if (this._mode === 'create') {\r\n          // tslint:disable-next-line: max-line-length\r\n          this.clientService.addClient(this.form.value.client, this.form.value.product, this.form.value.address, this.form.value.phone, this.form.value.extras);\r\n    } else if (this._mode === 'edit') {\r\n          // tslint:disable-next-line: max-line-length\r\n          this.clientService.updateClient(this.clientId, this.form.value.client, this.form.value.product, this.form.value.address, this.form.value.phone, this.form.value.extras);\r\n    }\r\n    // this.form.reset\r\n    this.form.reset();\r\n  }\r\n\r\n  totalSelected() {\r\n    // console.log(this.totalExtrasSelected);\r\n    // console.log(this.form.value.extras);\r\n    // console.log(this.form.controls.extras);\r\n    this.totalExtrasSelected = totalSelected(this.form.controls.extras as FormArray);\r\n    return this.totalExtrasSelected;\r\n  }\r\n\r\n  reset() {\r\n    this.form.reset();\r\n  }\r\n\r\n  printOrder() {\r\n    // const clientArray = JSON.stringify(this.client);\r\n    // this.printService.printDocument('show', this.clientId);\r\n    this.printService.printDocument('show', this.clientId);\r\n    // this.printService.printDocument('print', this.clientId);\r\n    // this.printService.onDataReady();\r\n  }\r\n}\r\n\r\nfunction minSelectedCheckboxes(min = 1) {\r\n  const validator: ValidatorFn = (formArray: FormArray) => {\r\n    // const totalSelected = formArray.controls\r\n    //   .map(control => control.value)\r\n    //   .reduce((prev, next) => next ? prev + next : prev, 0);\r\n    return totalSelected(formArray) >= min ? null : { required: true };\r\n  };\r\n  return validator;\r\n}\r\n\r\nfunction totalSelected(formArray: FormArray) {\r\n  return formArray.controls\r\n    .map(control => control.value)\r\n    .reduce((prev, next) => next ? prev + next : prev, 0);\r\n}\r\n//\r\n","<mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n<mat-accordion multi=\"true\" *ngIf=\"(clients.length > 0) && !isLoading\">\r\n  <mat-expansion-panel *ngFor=\"let client of clients\">\r\n    <mat-expansion-panel-header>{{ client.client }}</mat-expansion-panel-header>\r\n    <p>{{ client.address }}</p>\r\n    <mat-action-row>\r\n      <a mat-button color=\"primary\" [routerLink]=\"['/edit', client.id]\">EDITAR</a>\r\n      <button mat-button color=\"warn\" (click)=\"onDelete(client.id)\">BORRAR</button>\r\n    </mat-action-row>\r\n  </mat-expansion-panel>\r\n</mat-accordion>\r\n<mat-paginator [length]=\"totalClients\" [pageSize]=\"clientsPerPage\" [pageSizeOptions]='pageSizeOptions' (page)=\"onChangePage($event)\" *ngIf=\"(clients.length > 0)\"></mat-paginator>\r\n<p class=\"info-text mat-body-1\" *ngIf=\"(clients.length <= 0) && !isLoading\">No clientes agregados todavia!</p>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { ClientService } from '../client.service';\r\nimport { Client } from '../client.model';\r\nimport { PageEvent, MatPaginatorIntl } from '@angular/material';\r\nimport { MatPaginatorIntlEs } from './myPaginatorEs';\r\nimport { MatPaginatorIntlPo } from './myPaginatorPo';\r\n\r\n@Component({\r\n  selector: 'app-client-list',\r\n  templateUrl: './client-list.component.html',\r\n  styleUrls: ['./client-list.component.css'],\r\n  providers: [{provide: MatPaginatorIntl, useClass: MatPaginatorIntlEs}]\r\n  // providers: [{provide: MatPaginatorIntl, useClass: MatPaginatorIntlPo}]\r\n})\r\nexport class ClientListComponent implements OnInit, OnDestroy {\r\n  clients: Client[] = [];\r\n  isLoading = false;\r\n  totalClients = 0;\r\n  clientsPerPage = 10;\r\n  currentPage = 1;\r\n  pageSizeOptions = [1, 2, 5, 10];\r\n  private clientSub: Subscription;\r\n\r\n  constructor(public clientService: ClientService) {}\r\n\r\n    ngOnInit() {\r\n      this.isLoading = true;\r\n      this.clientService.getClients(this.clientsPerPage, this.currentPage);\r\n      this.clientSub = this.clientService.getClientUpdateListener()\r\n      .subscribe(\r\n        (clientData: {clients: Client[], clientCount: number}) => {\r\n          this.isLoading = false;\r\n          this.clients = clientData.clients;\r\n          this.totalClients = clientData.clientCount;\r\n        }\r\n      );\r\n    }\r\n\r\n    onDelete(clientId: string) {\r\n      this.isLoading = true;\r\n      this.clientService.deleteClient(clientId).subscribe(() => {\r\n        this.clientService.getClients(this.clientsPerPage, this.currentPage);\r\n      });\r\n    }\r\n\r\n    onChangePage(pageData: PageEvent) {\r\n      console.log(pageData);\r\n      this.isLoading = true;\r\n      this.currentPage = pageData.pageIndex + 1;\r\n      this.clientsPerPage = pageData.pageSize;\r\n      this.clientService.getClients(this.clientsPerPage, this.currentPage);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n      this.clientSub.unsubscribe();\r\n    }\r\n  }\r\n\r\n","import { MatPaginatorIntl } from '@angular/material';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class MatPaginatorIntlEs extends MatPaginatorIntl {\r\n  itemsPerPageLabel = 'Resultados por página';\r\n  nextPageLabel     = 'Página siguiente';\r\n  previousPageLabel = 'Página anterior';\r\n\r\n  getRangeLabel = function (page, pageSize, length) {\r\n    if (length === 0 || pageSize === 0) {\r\n      return '0 de ' + length;\r\n    }\r\n    length = Math.max(length, 0);\r\n    const startIndex = page * pageSize;\r\n    // If the start index exceeds the list length, do not try and fix the end index to the end.\r\n    const endIndex = startIndex < length ?\r\n      Math.min(startIndex + pageSize, length) :\r\n      startIndex + pageSize;\r\n    return startIndex + 1 + ' - ' + endIndex + ' de ' + length;\r\n  };\r\n}","<mat-card>\r\n  <form [formGroup]=\"form\">\r\n    <mat-form-field>\r\n      <mat-label>Cliente</mat-label>\r\n      <input matInput type=\"text\" formControlName=\"client\" placeholder=\"Nombre del cliente\">\r\n      <mat-error *ngIf=\"form.get('client').invalid\">Por favor teclee el nombre del cliente.</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-label>Producto</mat-label>\r\n      <input matInput type=\"text\" formControlName=\"product\" placeholder=\"Nombre del producto\">\r\n      <mat-error *ngIf=\"form.get('product').invalid\">Por favor teclee el nombre del producto.</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-label>Direccion</mat-label>\r\n      <input matInput type=\"text\" formControlName=\"address\" placeholder=\"Direccion\">\r\n      <mat-error *ngIf=\"form.get('address').invalid\">Por favor teclee la direccion del cliente.</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-label>Telefono</mat-label>\r\n      <input matInput type=\"text\" formControlName=\"phone\" placeholder=\"11-11111111\">\r\n      <mat-error *ngIf=\"form.get('phone').invalid\">Por favor el telefono del cliente.</mat-error>\r\n    </mat-form-field>\r\n\r\n    <div class=\"extras fill\">\r\n      <mat-label style=\"font-size: .9em; color: rgba(0,0,0,54);\" placeholder=\"Extras del cliente\">Extras: </mat-label>\r\n      <div class=\"checkbox\" *ngFor=\"let extra of extrasData; let i = index\">\r\n        <span *ngIf=\"this.client.extras[i]\">{{extra.description}}</span>\r\n      </div>\r\n    </div>\r\n    <br/>\r\n  </form>\r\n</mat-card>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {FormArray, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {ClientService} from '../client.service';\r\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\r\nimport {Client} from '../client.model';\r\nimport {of} from 'rxjs';\r\nimport {PrintService} from 'src/app/print/print.service';\r\nimport {Location} from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-client-show',\r\n  templateUrl: './client-show.component.html',\r\n  styleUrls: ['./client-show.component.css']\r\n})\r\nexport class ClientShowComponent implements OnInit {\r\n  client: Client;\r\n  form: FormGroup;\r\n  extrasData = [];\r\n  private _mode = 'show';\r\n  private clientId: string;\r\n\r\n  // tslint:disable-next-line:max-line-length\r\n  constructor(public clientService: ClientService, public route: ActivatedRoute, private formBuilder: FormBuilder, public printService: PrintService, public location: Location, public router: Router) {\r\n    console.log('ClientShowComponent');\r\n/*\r\n    router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd)\r\n    ).subscribe(() => {\r\n      if (location.path() != '') {\r\n        // console.log('path: ' + location.path());\r\n        // console.log(location.path().substr(location.path().indexOf('/') + 1, location.path().lastIndexOf('/')));\r\n        // console.log(location.path().substring(location.path().indexOf('/') + 1, location.path().lastIndexOf('/')));\r\n        // console.log(location.path().split('/'));\r\n        // console.log(location.path().split('/')[location.path().split('/').length - 2]);\r\n        // console.log(location.path().split('/')[location.path().split('/').length - 1]);\r\n\r\n        if (location.path().split('/').length > 1) {\r\n          this.path = location.path().split('/')[location.path().split('/').length - 2];\r\n        } else {\r\n          this.path = location.path().split('/')[location.path().split('/').length - 1];\r\n        }\r\n        if (this.path === 'show') {\r\n          this.printService.onDataReady();\r\n        }\r\n      }\r\n    });\r\n*/\r\n\r\n/*\r\n    router.events.subscribe((event) => {\r\n      console.log('event: ' + event);\r\n      // tslint:disable-next-line:triple-equals\r\n      if (location.path() != '') {\r\n        // console.log('path: ' + location.path());\r\n        // console.log(location.path().substr(location.path().indexOf('/') + 1, location.path().lastIndexOf('/')));\r\n        // console.log(location.path().substring(location.path().indexOf('/') + 1, location.path().lastIndexOf('/')));\r\n        // console.log(location.path().split('/'));\r\n        // console.log(location.path().split('/')[location.path().split('/').length - 2]);\r\n        // console.log(location.path().split('/')[location.path().split('/').length - 1]);\r\n\r\n        if (location.path().split('/').length > 1) {\r\n          this.path = location.path().split('/')[location.path().split('/').length - 2];\r\n        } else {\r\n          this.path = location.path().split('/')[location.path().split('/').length - 1];\r\n        }\r\n        if (this.path === 'show') {\r\n          this.printService.onDataReady();\r\n        }\r\n      }\r\n    });\r\n*/\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log('ClientShowComponent ngOnInit');\r\n    // this.form = new FormGroup({\r\n    //   'client': new FormControl(null, {validators: [Validators.required, Validators.minLength(3)]}),\r\n    //   'product': new FormControl(null, {validators: [Validators.required, Validators.minLength(3)]}),\r\n    //   'address': new FormControl(null, {validators: [Validators.required]}),\r\n    // tslint:disable-next-line: max-line-length\r\n    // 'phone': new FormControl(null, {validators: [Validators.required, Validators.minLength(11), Validators.pattern('[0-9]{2}-[0-9]{8}')]}),\r\n    //    'extras': new FormArray([], minSelectedCheckboxes(this.minimumExtrasSelected))\r\n    // });\r\n\r\n    this.form = this.formBuilder.group({\r\n      'client': new FormControl(null, {validators: [Validators.required, Validators.minLength(3)]}),\r\n      'product': new FormControl(null, {validators: [Validators.required, Validators.minLength(3)]}),\r\n      'address': new FormControl(null, {validators: [Validators.required]}),\r\n      // tslint:disable-next-line: max-line-length\r\n      'phone': new FormControl(null, {validators: [Validators.required, Validators.minLength(11), Validators.pattern('[0-9]{2}-[0-9]{8}')]}),\r\n      // 'extras': new FormArray([], minSelectedCheckboxes(this.minimumExtrasSelected))\r\n      'extras': new FormArray([], null)\r\n    });\r\n\r\n    of(ClientShowComponent.getExtras()).subscribe(extras => {\r\n      this.extrasData = extras;\r\n      this.addCheckboxes();\r\n    });\r\n\r\n    this.route.paramMap.subscribe( (paramMap: ParamMap) => {\r\n      console.log('paramMap: ' + paramMap);\r\n      // Object.keys(paramMap).forEach(e => console.log(`key=${e}  value=${paramMap[e]}`));\r\n      Object.keys(paramMap['params']).forEach(e => console.log(`key=${e}  value=${paramMap['params'][e]}`));\r\n      // Object.keys(paramMap['params']).forEach((value1, key1) => {\r\n      //   console.log(key1 + ': ' + value1);\r\n      //   Object.keys(value1).forEach((value2, key2) => {\r\n      //     console.log(key2 + ': ' + value2);\r\n      //   });\r\n      // });\r\n      console.log('paramMap has clientId: ' + paramMap.has('clientId'));\r\n      if (paramMap.has('clientId')) {\r\n        // tslint:disable-next-line:triple-equals\r\n        this.clientId = paramMap.get('clientId');\r\n        this.clientService.getClient(this.clientId).subscribe(clientData => {\r\n          console.log(clientData.extras);\r\n          // tslint:disable-next-line:max-line-length\r\n          this.client = {id: clientData.id, client: clientData.client, product: clientData.product, address: clientData.address, phone: clientData.phone, extras: clientData.extras};\r\n          // tslint:disable-next-line: max-line-length\r\n          this.form.setValue({client: this.client.client, product: this.client.product, address: this.client.address, phone: this.client.phone, extras: this.client.extras });\r\n          // tslint:disable-next-line:triple-equals\r\n          this.printService.onDataReady();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  // tslint:disable-next-line:member-ordering\r\n  private static getExtras() {\r\n     return [\r\n       { id: 1, name: 'pocchuc', description: 'Poc chuc', selected: false },\r\n       { id: 2, name: 'aguacate', description: 'Aguacate', selected: false },\r\n       { id: 3, name: 'cebolla', description: 'Cebolla', selected: false },\r\n       { id: 4, name: 'papa', description: 'Papa', selected: false }\r\n      ];\r\n  }\r\n\r\n  get mode(): string {\r\n    return this._mode;\r\n  }\r\n\r\n  set mode(value: string) {\r\n    this._mode = value;\r\n  }\r\n\r\n  private addCheckboxes() {\r\n    this.extrasData.forEach((o, i) => {\r\n      // const control = new FormControl(i === 0); // if first item set to true, else false, first selected\r\n      const control = new FormControl(i === -1); // if first item set to true, else false, no selected\r\n      // const control = new FormControl(o.id);\r\n      // const control = new FormControl(o.name);\r\n      (this.form.controls.extras as FormArray).push(control);\r\n    });\r\n    console.log(this.form.controls.extras);\r\n    console.log(this.form.controls.extras.get('0'));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Client } from './client.model';\r\nimport { Subject } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class ClientService {\r\n  private clients: Client[] = [];\r\n  private clientUpdated = new Subject<{clients: Client[], clientCount: number}>();\r\n  private uri = 'http://localhost:3000/api/client/';\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  getClients(clientPerPage: number, currentPage: number) {\r\n    const queryParams = `?pagesize=${clientPerPage}&page=${currentPage}`;\r\n    this.http.get<{ message: string; clients: any, maxClients: number}>(this.uri + queryParams)\r\n    .pipe(map((clientData) => {\r\n      return {\r\n        clients: clientData.clients.map(client => {\r\n          return {\r\n            id: client._id,\r\n            client: client.client,\r\n            product: client.product,\r\n            address: client.address,\r\n            phone: client.phone,\r\n            extras: client.extras\r\n          };\r\n        }),\r\n        maxClients: clientData.maxClients\r\n      };\r\n    }))\r\n    .subscribe(transformedClientData => {\r\n      console.log(transformedClientData);\r\n      Object.keys(transformedClientData).forEach(e => console.log(`key=${e}  value=${transformedClientData[e]}`));\r\n      this.clients = transformedClientData.clients;\r\n      this.clientUpdated.next({clients: [...this.clients], clientCount: transformedClientData.maxClients});\r\n    });\r\n  }\r\n\r\n  getClientUpdateListener() {\r\n    return this.clientUpdated.asObservable();\r\n  }\r\n\r\n  getClient(id: string) {\r\n    return this.http.get<{id: string, client: string, product: string, address: string, phone: string, extras: boolean[]}>(this.uri + id);\r\n  }\r\n\r\n  addClient(client: string, product: string, address: string, phone: string, extras: boolean[]) {\r\n    const headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'multipart/form-data;boundary=' + Math.random());\r\n    headers.append('Accept', 'application/json');\r\n    headers.append('Authorization', 'Basic ' + btoa('username:password'));\r\n\r\n/*\r\n    console.log(client);\r\n    console.log(product);\r\n    console.log(address);\r\n    console.log(phone);\r\n    console.log(extras);\r\n */\r\n\r\n    let clientData: Client | FormData;\r\n\r\n    // clientData = new FormData();\r\n    // clientData.append('client', client);\r\n    // clientData.append('product', product);\r\n    // clientData.append('address', address);\r\n    // clientData.append('phone', phone);\r\n    // clientData.append('extras', extras);\r\n\r\n    clientData = {\r\n      id: '',\r\n      client: client,\r\n      product: product,\r\n      address: address,\r\n      phone: phone,\r\n      extras: extras\r\n    };\r\n\r\n    console.log('Client data to be send to save: ');\r\n    console.log(clientData);\r\n    // clientData.forEach((value, key) => {\r\n    //   console.log(key + ': ' + value);\r\n    // });\r\n    Object.keys(clientData).forEach(e => console.log(`key=${e}  value=${clientData[e]}`));\r\n\r\n\r\n    this.http\r\n    // .post<{ message: string, clientModel: Client }>(this.uri, clientData)\r\n    .post<{ message: string, clientModel: Client, headers: { headers: HttpHeaders } }>(this.uri, clientData, { headers })\r\n    .subscribe(response => {\r\n      console.log(response);\r\n      this.router.navigate(['/']);\r\n    });\r\n  }\r\n\r\n  updateClient(id: string, client: string, product: string, address: string, phone: string, extras: boolean[]) {\r\n    let clientData: Client | FormData;\r\n\r\n      // clientData = new FormData();\r\n      // clientData.append('id', id);\r\n      // clientData.append('client', client);\r\n      // clientData.append('product', product);\r\n      // clientData.append('address', address);\r\n      // clientData.append('phone', phone);\r\n      // clientData.append('extras', extras);\r\n\r\n    clientData = {\r\n      id: id,\r\n      client: client,\r\n      product: product,\r\n      address: address,\r\n      phone: phone,\r\n      extras: extras\r\n    };\r\n\r\n    console.log('Client data to be send to update: ');\r\n    console.log(clientData);\r\n    // clientData.forEach((value, key) => {\r\n    //   console.log(key + ': ' + value);\r\n    // });\r\n    Object.keys(clientData).forEach(e => console.log(`key=${e}  value=${clientData[e]}`));\r\n\r\n    this.http.put(this.uri + id, clientData).\r\n    subscribe(response => {\r\n      // const updatedPosts = [...this.client];\r\n      console.log(response);\r\n      this.router.navigate(['/']);\r\n    });\r\n}\r\n\r\n  deleteClient(clientId: string) {\r\n    // this.http.delete(this.uri + postId)\r\n    // .subscribe(() => {\r\n    //   const updatedPosts = this.posts.filter(post => post.id !== postId);\r\n    //   this.posts = updatedPosts;\r\n    //   this.postsUpdated.next([...this.posts]);\r\n    // });\r\n    return this.http.delete(this.uri + clientId);\r\n  }\r\n}\r\n\r\n","<mat-toolbar color=\"primary\">\r\n  <!-- <span>{{ MyTitle }}</span> -->\r\n  <span>\r\n    <a routerLink=\"/\">{{ MyTitle }}</a>\r\n  </span>\r\n  <span class=\"spacer\"></span>\r\n  <ul>\r\n    <li>\r\n      <a mat-button routerLink=\"/create\" *ngIf=\"isLoggedIn()\" routerLinkActive=\"mat-accent\">Nuevo Cliente</a>\r\n    </li>\r\n    <li>\r\n      <a mat-button routerLink=\"/login\" *ngIf=\"!isLoggedIn()\" routerLinkActive=\"mat-accent\">Iniciar sesión</a>\r\n    </li>\r\n    <li>\r\n      <a mat-button routerLink=\"/signup\" *ngIf=\"!isLoggedIn()\" routerLinkActive=\"mat-accent\">Registrese</a>\r\n    </li>\r\n    <li>\r\n      <a mat-button routerLink=\"/logout\" *ngIf=\"isLoggedIn()\" routerLinkActive=\"mat-accent\">Cerrar sesión</a>\r\n    </li>\r\n  </ul>\r\n</mat-toolbar>\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent {\r\n  @Input()\r\n  MyTitle: string;\r\n\r\n  constructor() {\r\n      console.log('HeaderComponent');\r\n  }\r\n\r\n  public isLoggedIn() {\r\n    return localStorage.getItem('ACCESS_TOKEN') !== null;\r\n  }\r\n}\r\n","<table>\r\n  <thead><tr><td>\r\n    <div class=\"header-space\"></div>\r\n  </td></tr></thead>\r\n  <tbody><tr><td>\r\n    <div class=\"content\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </td></tr></tbody>\r\n  <tfoot><tr><td>\r\n    <div class=\"footer-space\"></div>\r\n  </td></tr></tfoot>\r\n</table>\r\n\r\n<!--<div class=\"header\">COOL HEADER</div>-->\r\n<!--<div class=\"footer\">AWESOME FOOTER</div>-->\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-print-layout',\r\n  templateUrl: './print-layout.component.html',\r\n  styleUrls: ['./print-layout.component.css']\r\n})\r\nexport class PrintLayoutComponent implements OnInit {\r\n\r\n  constructor() {\r\n    console.log('PrintLayoutComponent');\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log('PrintLayoutComponent ngOnInit');\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {Router} from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PrintService {\r\n  isPrinting = false;\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  printDocument(documentName: string, documentData: string) {\r\n    console.log('PrintService printDocument');\r\n    this.isPrinting = true;\r\n    // this.onDataReady();\r\n    this.router.navigate(['/', { outlets: {\r\n        'printArea': ['print', documentName, documentData]\r\n    }}]);\r\n  }\r\n\r\n  onDataReady() {\r\n    console.log('PrintService onDataReady');\r\n    setTimeout(() => {\r\n      window.print();\r\n      this.isPrinting = false;\r\n      // this.router.navigate([{ outlets: { print: null }}]);\r\n      this.router.navigate([{ outlets: { printPopup: null }}]);\r\n    });\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":"webpack:///"}